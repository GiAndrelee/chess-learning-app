{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gmlee\\\\Downloads\\\\LearnChessApp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Chess } from \"chess.js\";\nimport { Chessboard } from \"react-chessboard\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [game, setGame] = useState(new Chess());\n  const [fen, setFen] = useState(game.fen());\n  const [advice, setAdvice] = useState(\"\");\n  const [gameOver, setGameOver] = useState(false);\n  const [vsComputer, setVsComputer] = useState(true); // ✅ New: Play vs Computer or Solo\n\n  useEffect(() => {\n    if (game.isGameOver()) {\n      setGameOver(true);\n      return;\n    }\n    if (vsComputer && game.turn() === \"b\") {\n      setTimeout(() => {\n        makeComputerMove();\n      }, 500);\n    }\n  }, [game, vsComputer]);\n  const handleMove = (sourceSquare, targetSquare) => {\n    if (!game || game.game_over()) return false;\n    if (vsComputer && game.turn() !== \"w\") return false; // Player is White in vsComputer mode\n\n    const move = game.move({\n      from: sourceSquare,\n      to: targetSquare,\n      promotion: \"q\"\n    });\n    if (move === null) return false;\n    setFen(game.fen());\n    setGame(new Chess(game.fen()));\n    setAdvice(\"\");\n    return true;\n  };\n  const makeComputerMove = () => {\n    const moves = game.moves();\n    if (moves.length === 0) {\n      setGameOver(true);\n      return;\n    }\n    const randomMove = moves[Math.floor(Math.random() * moves.length)];\n    game.move(randomMove);\n    setFen(game.fen());\n    setGame(new Chess(game.fen()));\n  };\n\n  // ✅ New Smart Hint Generator\n  const getAdvice = () => {\n    const possibleMoves = game.moves({\n      verbose: true\n    });\n    if (possibleMoves.length > 0) {\n      const analyzedMoves = possibleMoves.map(move => {\n        if (move.flags.includes('c')) return {\n          move: move.san,\n          reason: \"captures a piece\"\n        };\n        if (move.flags.includes('k')) return {\n          move: move.san,\n          reason: \"puts the king in check\"\n        };\n        if (move.flags.includes('e')) return {\n          move: move.san,\n          reason: \"en passant capture\"\n        };\n        if (['N', 'B', 'R', 'Q'].includes(move.piece.toUpperCase()) && (move.to[0] === 'd' || move.to[0] === 'e')) {\n          return {\n            move: move.san,\n            reason: \"controls the center\"\n          };\n        }\n        return {\n          move: move.san,\n          reason: \"develops a piece\"\n        };\n      });\n      const randomAdvice = analyzedMoves[Math.floor(Math.random() * analyzedMoves.length)];\n      setAdvice(`Hint: ${randomAdvice.move} because it ${randomAdvice.reason}.`);\n    } else {\n      setAdvice(\"No advice. Game might be over!\");\n    }\n  };\n  const resetGame = () => {\n    const newGame = new Chess();\n    setGame(newGame);\n    setFen(newGame.fen());\n    setAdvice(\"\");\n    setGameOver(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chess Learning App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          checked: vsComputer,\n          onChange: () => setVsComputer(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), \"Play vs Computer\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          marginLeft: 15\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          checked: !vsComputer,\n          onChange: () => setVsComputer(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), \"Play Solo (2 players)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chessboard, {\n      position: fen,\n      onPieceDrop: (source, target) => handleMove(source, target),\n      boardWidth: 400\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 20\n      },\n      children: [gameOver ? /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Game Over!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getAdvice,\n        children: \"Get Smart Hint\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), advice && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: advice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"Reset Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Qo37eF/IbBqriKRLLTdd3PmyIG4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Chess","Chessboard","jsxDEV","_jsxDEV","App","_s","game","setGame","fen","setFen","advice","setAdvice","gameOver","setGameOver","vsComputer","setVsComputer","isGameOver","turn","setTimeout","makeComputerMove","handleMove","sourceSquare","targetSquare","game_over","move","from","to","promotion","moves","length","randomMove","Math","floor","random","getAdvice","possibleMoves","verbose","analyzedMoves","map","flags","includes","san","reason","piece","toUpperCase","randomAdvice","resetGame","newGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","type","checked","onChange","marginLeft","position","onPieceDrop","source","target","boardWidth","marginTop","onClick","_c","$RefreshReg$"],"sources":["C:/Users/gmlee/Downloads/LearnChessApp/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Chess } from \"chess.js\";\nimport { Chessboard } from \"react-chessboard\";\nimport \"./App.css\";\n\nfunction App() {\n  const [game, setGame] = useState(new Chess());\n  const [fen, setFen] = useState(game.fen());\n  const [advice, setAdvice] = useState(\"\");\n  const [gameOver, setGameOver] = useState(false);\n  const [vsComputer, setVsComputer] = useState(true); // ✅ New: Play vs Computer or Solo\n\n  useEffect(() => {\n    if (game.isGameOver()) {\n      setGameOver(true);\n      return;\n    }\n\n    if (vsComputer && game.turn() === \"b\") {\n      setTimeout(() => {\n        makeComputerMove();\n      }, 500);\n    }\n  }, [game, vsComputer]);\n\n  const handleMove = (sourceSquare, targetSquare) => {\n    if (!game || game.game_over()) return false;\n\n    if (vsComputer && game.turn() !== \"w\") return false; // Player is White in vsComputer mode\n\n    const move = game.move({\n      from: sourceSquare,\n      to: targetSquare,\n      promotion: \"q\",\n    });\n\n    if (move === null) return false;\n\n    setFen(game.fen());\n    setGame(new Chess(game.fen()));\n    setAdvice(\"\");\n    return true;\n  };\n\n  const makeComputerMove = () => {\n    const moves = game.moves();\n    if (moves.length === 0) {\n      setGameOver(true);\n      return;\n    }\n    const randomMove = moves[Math.floor(Math.random() * moves.length)];\n    game.move(randomMove);\n    setFen(game.fen());\n    setGame(new Chess(game.fen()));\n  };\n\n  // ✅ New Smart Hint Generator\n  const getAdvice = () => {\n    const possibleMoves = game.moves({ verbose: true });\n\n    if (possibleMoves.length > 0) {\n      const analyzedMoves = possibleMoves.map(move => {\n        if (move.flags.includes('c')) return { move: move.san, reason: \"captures a piece\" };\n        if (move.flags.includes('k')) return { move: move.san, reason: \"puts the king in check\" };\n        if (move.flags.includes('e')) return { move: move.san, reason: \"en passant capture\" };\n        if (['N', 'B', 'R', 'Q'].includes(move.piece.toUpperCase()) && (move.to[0] === 'd' || move.to[0] === 'e')) {\n          return { move: move.san, reason: \"controls the center\" };\n        }\n        return { move: move.san, reason: \"develops a piece\" };\n      });\n\n      const randomAdvice = analyzedMoves[Math.floor(Math.random() * analyzedMoves.length)];\n      setAdvice(`Hint: ${randomAdvice.move} because it ${randomAdvice.reason}.`);\n    } else {\n      setAdvice(\"No advice. Game might be over!\");\n    }\n  };\n\n  const resetGame = () => {\n    const newGame = new Chess();\n    setGame(newGame);\n    setFen(newGame.fen());\n    setAdvice(\"\");\n    setGameOver(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Chess Learning App</h1>\n\n      {/* ✅ New Play Mode Toggle */}\n      <div style={{ marginBottom: 20 }}>\n        <label>\n          <input\n            type=\"radio\"\n            checked={vsComputer}\n            onChange={() => setVsComputer(true)}\n          />\n          Play vs Computer\n        </label>\n        <label style={{ marginLeft: 15 }}>\n          <input\n            type=\"radio\"\n            checked={!vsComputer}\n            onChange={() => setVsComputer(false)}\n          />\n          Play Solo (2 players)\n        </label>\n      </div>\n\n      <Chessboard\n        position={fen}\n        onPieceDrop={(source, target) => handleMove(source, target)}\n        boardWidth={400}\n      />\n\n      <div style={{ marginTop: 20 }}>\n        {gameOver ? (\n          <h2>Game Over!</h2>\n        ) : (\n          <button onClick={getAdvice}>Get Smart Hint</button>\n        )}\n        {advice && <p>{advice}</p>}\n        <br />\n        <button onClick={resetGame}>Reset Game</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gmlee\\\\Downloads\\\\LearnChessApp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Chess } from \"chess.js\";\nimport { Chessboard } from \"react-chessboard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [game, setGame] = useState(new Chess());\n  const [gameOver, setGameOver] = useState(false);\n  const [advice, setAdvice] = useState(\"\");\n  const [hint, setHint] = useState(\"\");\n  function safeGameMutate(modify) {\n    setGame(g => {\n      const updated = new Chess(g.fen());\n      modify(updated);\n      return updated;\n    });\n  }\n  function evaluateBoard(gameInstance) {\n    let score = 0;\n    const pieceValue = {\n      p: 1,\n      n: 3,\n      b: 3,\n      r: 5,\n      q: 9,\n      k: 0\n    };\n    const board = gameInstance.board();\n    board.forEach(row => {\n      row.forEach(piece => {\n        if (piece) {\n          const value = pieceValue[piece.type] || 0;\n          score += piece.color === \"w\" ? value : -value;\n        }\n      });\n    });\n\n    // Bonus for controlling center\n    const centerSquares = [\"d4\", \"d5\", \"e4\", \"e5\"];\n    centerSquares.forEach(square => {\n      const piece = gameInstance.get(square);\n      if (piece) {\n        score += piece.color === \"w\" ? 0.5 : -0.5;\n      }\n    });\n    return score;\n  }\n  function giveAdvice(lastMove, scoreBefore, scoreAfter) {\n    const scoreDifference = scoreAfter - scoreBefore;\n    if (scoreDifference > 0.5) {\n      setAdvice(\"Nice move! Your position improved!\");\n    } else if (scoreDifference < -0.5) {\n      setAdvice(\"Oops, that move weakened your position!\");\n    } else {\n      setAdvice(\"Okay move, but maybe there was something better.\");\n    }\n  }\n  function handleMove(sourceSquare, targetSquare) {\n    const gameCopy = new Chess(game.fen());\n    const scoreBefore = evaluateBoard(gameCopy);\n    let move = null;\n    try {\n      move = gameCopy.move({\n        from: sourceSquare,\n        to: targetSquare,\n        promotion: \"q\" // promote to queen for now\n      });\n    } catch (e) {\n      return false;\n    }\n    if (move === null) return false;\n    const scoreAfter = evaluateBoard(gameCopy);\n    if (gameCopy.isGameOver()) {\n      setGameOver(true);\n      if (gameCopy.isCheckmate()) {\n        setAdvice(\"Checkmate! You won!\");\n      } else {\n        setAdvice(\"Draw!\");\n      }\n    } else {\n      giveAdvice(move, scoreBefore, scoreAfter);\n    }\n    setHint(\"\");\n    setGame(gameCopy);\n    return true;\n  }\n  function showHint() {\n    const possibleMoves = game.moves({\n      verbose: true\n    });\n    if (possibleMoves.length === 0) {\n      setHint(\"No moves available.\");\n      return;\n    }\n    let bestMove = null;\n    let bestScore = -Infinity;\n    possibleMoves.forEach(move => {\n      const gameCopy = new Chess(game.fen());\n      gameCopy.move(move.san);\n      const score = evaluateBoard(gameCopy);\n      if (score > bestScore) {\n        bestScore = score;\n        bestMove = move;\n      }\n    });\n    if (bestMove) {\n      setHint(`Hint: Try moving from ${bestMove.from} to ${bestMove.to}.`);\n    } else {\n      setHint(\"No hint available.\");\n    }\n  }\n  function resetGame() {\n    setGame(new Chess());\n    setGameOver(false);\n    setAdvice(\"\");\n    setHint(\"\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      padding: \"20px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Learn Chess\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chessboard, {\n      position: game.fen(),\n      onPieceDrop: handleMove,\n      boardWidth: 400,\n      boardOrientation: \"white\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: showHint,\n        children: \"Get Hint\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"Restart Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"20px\",\n        fontSize: \"18px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Advice:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), \" \", advice]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"10px\",\n        fontSize: \"18px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Hint:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), \" \", hint]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7kyh1hzyS/PGyCrleIKypY712CY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Chess","Chessboard","jsxDEV","_jsxDEV","App","_s","game","setGame","gameOver","setGameOver","advice","setAdvice","hint","setHint","safeGameMutate","modify","g","updated","fen","evaluateBoard","gameInstance","score","pieceValue","p","n","b","r","q","k","board","forEach","row","piece","value","type","color","centerSquares","square","get","giveAdvice","lastMove","scoreBefore","scoreAfter","scoreDifference","handleMove","sourceSquare","targetSquare","gameCopy","move","from","to","promotion","e","isGameOver","isCheckmate","showHint","possibleMoves","moves","verbose","length","bestMove","bestScore","Infinity","san","resetGame","className","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","position","onPieceDrop","boardWidth","boardOrientation","marginTop","onClick","fontSize","_c","$RefreshReg$"],"sources":["C:/Users/gmlee/Downloads/LearnChessApp/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Chess } from \"chess.js\";\nimport { Chessboard } from \"react-chessboard\";\n\nfunction App() {\n  const [game, setGame] = useState(new Chess());\n  const [gameOver, setGameOver] = useState(false);\n  const [advice, setAdvice] = useState(\"\");\n  const [hint, setHint] = useState(\"\");\n\n  function safeGameMutate(modify) {\n    setGame((g) => {\n      const updated = new Chess(g.fen());\n      modify(updated);\n      return updated;\n    });\n  }\n\n  function evaluateBoard(gameInstance) {\n    let score = 0;\n    const pieceValue = { p: 1, n: 3, b: 3, r: 5, q: 9, k: 0 };\n    const board = gameInstance.board();\n\n    board.forEach((row) => {\n      row.forEach((piece) => {\n        if (piece) {\n          const value = pieceValue[piece.type] || 0;\n          score += piece.color === \"w\" ? value : -value;\n        }\n      });\n    });\n\n    // Bonus for controlling center\n    const centerSquares = [\"d4\", \"d5\", \"e4\", \"e5\"];\n    centerSquares.forEach((square) => {\n      const piece = gameInstance.get(square);\n      if (piece) {\n        score += piece.color === \"w\" ? 0.5 : -0.5;\n      }\n    });\n\n    return score;\n  }\n\n  function giveAdvice(lastMove, scoreBefore, scoreAfter) {\n    const scoreDifference = scoreAfter - scoreBefore;\n    if (scoreDifference > 0.5) {\n      setAdvice(\"Nice move! Your position improved!\");\n    } else if (scoreDifference < -0.5) {\n      setAdvice(\"Oops, that move weakened your position!\");\n    } else {\n      setAdvice(\"Okay move, but maybe there was something better.\");\n    }\n  }\n\n  function handleMove(sourceSquare, targetSquare) {\n    const gameCopy = new Chess(game.fen());\n    const scoreBefore = evaluateBoard(gameCopy);\n\n    let move = null;\n    try {\n      move = gameCopy.move({\n        from: sourceSquare,\n        to: targetSquare,\n        promotion: \"q\", // promote to queen for now\n      });\n    } catch (e) {\n      return false;\n    }\n\n    if (move === null) return false;\n\n    const scoreAfter = evaluateBoard(gameCopy);\n\n    if (gameCopy.isGameOver()) {\n      setGameOver(true);\n      if (gameCopy.isCheckmate()) {\n        setAdvice(\"Checkmate! You won!\");\n      } else {\n        setAdvice(\"Draw!\");\n      }\n    } else {\n      giveAdvice(move, scoreBefore, scoreAfter);\n    }\n\n    setHint(\"\");\n    setGame(gameCopy);\n    return true;\n  }\n\n  function showHint() {\n    const possibleMoves = game.moves({ verbose: true });\n    if (possibleMoves.length === 0) {\n      setHint(\"No moves available.\");\n      return;\n    }\n\n    let bestMove = null;\n    let bestScore = -Infinity;\n\n    possibleMoves.forEach((move) => {\n      const gameCopy = new Chess(game.fen());\n      gameCopy.move(move.san);\n      const score = evaluateBoard(gameCopy);\n      if (score > bestScore) {\n        bestScore = score;\n        bestMove = move;\n      }\n    });\n\n    if (bestMove) {\n      setHint(`Hint: Try moving from ${bestMove.from} to ${bestMove.to}.`);\n    } else {\n      setHint(\"No hint available.\");\n    }\n  }\n\n  function resetGame() {\n    setGame(new Chess());\n    setGameOver(false);\n    setAdvice(\"\");\n    setHint(\"\");\n  }\n\n  return (\n    <div className=\"App\" style={{ padding: \"20px\" }}>\n      <h1>Learn Chess</h1>\n      <Chessboard\n        position={game.fen()}\n        onPieceDrop={handleMove}\n        boardWidth={400}\n        boardOrientation=\"white\"\n      />\n      <div style={{ marginTop: \"20px\" }}>\n        <button onClick={showHint}>Get Hint</button>{\" \"}\n        <button onClick={resetGame}>Restart Game</button>\n      </div>\n      <div style={{ marginTop: \"20px\", fontSize: \"18px\" }}>\n        <strong>Advice:</strong> {advice}\n      </div>\n      <div style={{ marginTop: \"10px\", fontSize: \"18px\" }}>\n        <strong>Hint:</strong> {hint}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gmlee\\\\Downloads\\\\LearnChessApp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Chessboard } from 'react-chessboard';\nimport { Chess } from 'chess.js'; // Import chess.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [game, setGame] = useState(new Chess());\n  const [boardPosition, setBoardPosition] = useState(game.fen());\n  const [gameOver, setGameOver] = useState(false);\n\n  // Function to make a move for the computer\n  const makeComputerMove = () => {\n    const legalMoves = game.legal_moves();\n    if (legalMoves.length === 0) return; // No legal moves, game over\n    const randomMove = legalMoves[Math.floor(Math.random() * legalMoves.length)];\n    game.ugly_move(randomMove);\n    setGame(new Chess(game.fen())); // Update game state after the computer's move\n  };\n\n  // Handle the player's move\n  const handleMove = move => {\n    let gameCopy = {\n      ...game\n    };\n    const result = gameCopy.ugly_move(move);\n    if (result) {\n      setGame(gameCopy); // Update game state\n      setBoardPosition(gameCopy.fen()); // Update board position\n\n      // If the game isn't over and it's the computer's turn, let the computer play\n      if (!gameCopy.game_over() && gameCopy.turn() === 'b') {\n        makeComputerMove();\n      }\n    }\n  };\n\n  // Function to provide advice (next legal move for the player)\n  const getAdvice = () => {\n    const moves = game.legal_moves();\n    if (moves.length > 0) {\n      const randomMove = moves[Math.floor(Math.random() * moves.length)];\n      return `Try the move ${randomMove.san}`; // Return the standard algebraic notation for the move\n    }\n    return 'No moves available!';\n  };\n\n  // Handle the drop event when the player drops a piece\n  const handleDrop = (source, target) => {\n    const move = {\n      from: source,\n      to: target,\n      promotion: 'q'\n    }; // Default promotion to queen\n    handleMove(move);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chess Learning App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Chessboard, {\n        position: boardPosition,\n        onPieceDrop: (source, target) => handleDrop(source, target) // Handle piece drop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-over\",\n      children: \"Game Over!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 20\n    }, this), !gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => alert(getAdvice()),\n        children: \"Get Advice\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"E10Ifys95xYLeiXM7OjFV98pJ7g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Chessboard","Chess","jsxDEV","_jsxDEV","App","_s","game","setGame","boardPosition","setBoardPosition","fen","gameOver","setGameOver","makeComputerMove","legalMoves","legal_moves","length","randomMove","Math","floor","random","ugly_move","handleMove","move","gameCopy","result","game_over","turn","getAdvice","moves","san","handleDrop","source","target","from","to","promotion","className","children","fileName","_jsxFileName","lineNumber","columnNumber","position","onPieceDrop","onClick","alert","_c","$RefreshReg$"],"sources":["C:/Users/gmlee/Downloads/LearnChessApp/src/App.js"],"sourcesContent":["\nimport React, { useState, useEffect } from 'react';\nimport { Chessboard } from 'react-chessboard';\nimport { Chess } from 'chess.js'; // Import chess.js\n\nconst App = () => {\n  const [game, setGame] = useState(new Chess());\n  const [boardPosition, setBoardPosition] = useState(game.fen());\n  const [gameOver, setGameOver] = useState(false);\n\n \n  // Function to make a move for the computer\n  const makeComputerMove = () => {\n    const legalMoves = game.legal_moves();\n    if (legalMoves.length === 0) return; // No legal moves, game over\n    const randomMove = legalMoves[Math.floor(Math.random() * legalMoves.length)];\n    game.ugly_move(randomMove);\n    setGame(new Chess(game.fen())); // Update game state after the computer's move\n  };\n\n  // Handle the player's move\n  const handleMove = (move) => {\n    let gameCopy = { ...game };\n    const result = gameCopy.ugly_move(move);\n    if (result) {\n      setGame(gameCopy); // Update game state\n      setBoardPosition(gameCopy.fen()); // Update board position\n\n      // If the game isn't over and it's the computer's turn, let the computer play\n      if (!gameCopy.game_over() && gameCopy.turn() === 'b') {\n        makeComputerMove();\n      }\n    }\n  };\n\n  // Function to provide advice (next legal move for the player)\n  const getAdvice = () => {\n    const moves = game.legal_moves();\n    if (moves.length > 0) {\n      const randomMove = moves[Math.floor(Math.random() * moves.length)];\n      return `Try the move ${randomMove.san}`; // Return the standard algebraic notation for the move\n    }\n    return 'No moves available!';\n  };\n\n  // Handle the drop event when the player drops a piece\n  const handleDrop = (source, target) => {\n    const move = { from: source, to: target, promotion: 'q' }; // Default promotion to queen\n    handleMove(move);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Chess Learning App</h1>\n      <div>\n        <Chessboard\n          position={boardPosition}\n          onPieceDrop={(source, target) => handleDrop(source, target)} // Handle piece drop\n        />\n      </div>\n      {gameOver && <div className=\"game-over\">Game Over!</div>}\n      {!gameOver && (\n        <div>\n          <button onClick={() => alert(getAdvice())}>Get Advice</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,KAAK,QAAQ,UAAU,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAIG,KAAK,CAAC,CAAC,CAAC;EAC7C,MAAM,CAACO,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAACQ,IAAI,CAACI,GAAG,CAAC,CAAC,CAAC;EAC9D,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;;EAG/C;EACA,MAAMe,gBAAgB,GAAGA,CAAA,KAAM;IAC7B,MAAMC,UAAU,GAAGR,IAAI,CAACS,WAAW,CAAC,CAAC;IACrC,IAAID,UAAU,CAACE,MAAM,KAAK,CAAC,EAAE,OAAO,CAAC;IACrC,MAAMC,UAAU,GAAGH,UAAU,CAACI,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGN,UAAU,CAACE,MAAM,CAAC,CAAC;IAC5EV,IAAI,CAACe,SAAS,CAACJ,UAAU,CAAC;IAC1BV,OAAO,CAAC,IAAIN,KAAK,CAACK,IAAI,CAACI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAClC,CAAC;;EAED;EACA,MAAMY,UAAU,GAAIC,IAAI,IAAK;IAC3B,IAAIC,QAAQ,GAAG;MAAE,GAAGlB;IAAK,CAAC;IAC1B,MAAMmB,MAAM,GAAGD,QAAQ,CAACH,SAAS,CAACE,IAAI,CAAC;IACvC,IAAIE,MAAM,EAAE;MACVlB,OAAO,CAACiB,QAAQ,CAAC,CAAC,CAAC;MACnBf,gBAAgB,CAACe,QAAQ,CAACd,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;;MAElC;MACA,IAAI,CAACc,QAAQ,CAACE,SAAS,CAAC,CAAC,IAAIF,QAAQ,CAACG,IAAI,CAAC,CAAC,KAAK,GAAG,EAAE;QACpDd,gBAAgB,CAAC,CAAC;MACpB;IACF;EACF,CAAC;;EAED;EACA,MAAMe,SAAS,GAAGA,CAAA,KAAM;IACtB,MAAMC,KAAK,GAAGvB,IAAI,CAACS,WAAW,CAAC,CAAC;IAChC,IAAIc,KAAK,CAACb,MAAM,GAAG,CAAC,EAAE;MACpB,MAAMC,UAAU,GAAGY,KAAK,CAACX,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGS,KAAK,CAACb,MAAM,CAAC,CAAC;MAClE,OAAO,gBAAgBC,UAAU,CAACa,GAAG,EAAE,CAAC,CAAC;IAC3C;IACA,OAAO,qBAAqB;EAC9B,CAAC;;EAED;EACA,MAAMC,UAAU,GAAGA,CAACC,MAAM,EAAEC,MAAM,KAAK;IACrC,MAAMV,IAAI,GAAG;MAAEW,IAAI,EAAEF,MAAM;MAAEG,EAAE,EAAEF,MAAM;MAAEG,SAAS,EAAE;IAAI,CAAC,CAAC,CAAC;IAC3Dd,UAAU,CAACC,IAAI,CAAC;EAClB,CAAC;EAED,oBACEpB,OAAA;IAAKkC,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBnC,OAAA;MAAAmC,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC3BvC,OAAA;MAAAmC,QAAA,eACEnC,OAAA,CAACH,UAAU;QACT2C,QAAQ,EAAEnC,aAAc;QACxBoC,WAAW,EAAEA,CAACZ,MAAM,EAAEC,MAAM,KAAKF,UAAU,CAACC,MAAM,EAAEC,MAAM,CAAE,CAAC;MAAA;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EACL/B,QAAQ,iBAAIR,OAAA;MAAKkC,SAAS,EAAC,WAAW;MAAAC,QAAA,EAAC;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACvD,CAAC/B,QAAQ,iBACRR,OAAA;MAAAmC,QAAA,eACEnC,OAAA;QAAQ0C,OAAO,EAAEA,CAAA,KAAMC,KAAK,CAAClB,SAAS,CAAC,CAAC,CAAE;QAAAU,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACrC,EAAA,CA/DID,GAAG;AAAA2C,EAAA,GAAH3C,GAAG;AAiET,eAAeA,GAAG;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
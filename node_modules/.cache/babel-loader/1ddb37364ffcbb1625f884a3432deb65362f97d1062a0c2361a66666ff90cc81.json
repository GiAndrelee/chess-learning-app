{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gmlee\\\\Downloads\\\\LearnChessApp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Chess } from \"chess.js\";\nimport { Chessboard } from \"react-chessboard\";\nimport Confetti from \"react-confetti\";\nimport { Howl } from \"howler\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst moveSound = new Howl({\n  src: [\"https://actions.google.com/sounds/v1/cartoon/cartoon_boing.ogg\"]\n});\nfunction App() {\n  _s();\n  const [game, setGame] = useState(new Chess());\n  const [fen, setFen] = useState(game.fen());\n  const [advice, setAdvice] = useState(\"\");\n  const [gameOver, setGameOver] = useState(false);\n  const [vsComputer, setVsComputer] = useState(true);\n  const [difficulty, setDifficulty] = useState(\"Medium\"); // New\n  const [winner, setWinner] = useState(\"\");\n  const [moveHistory, setMoveHistory] = useState([]);\n  useEffect(() => {\n    if (game.isGameOver()) {\n      setGameOver(true);\n      setWinner(game.turn() === \"w\" ? \"Black wins!\" : \"White wins!\");\n      return;\n    }\n    if (vsComputer && game.turn() === \"b\") {\n      setTimeout(() => {\n        makeComputerMove();\n      }, 500);\n    }\n  }, [game, vsComputer]);\n  const handleMove = (sourceSquare, targetSquare) => {\n    if (!game || game.isGameOver()) return false;\n    if (vsComputer && game.turn() !== \"w\") return false;\n    const move = game.move({\n      from: sourceSquare,\n      to: targetSquare,\n      promotion: \"q\"\n    });\n    if (move === null) return false;\n    moveSound.play();\n    setFen(game.fen());\n    setGame(new Chess(game.fen()));\n    setMoveHistory(game.history());\n    setAdvice(\"\");\n    return true;\n  };\n  const makeComputerMove = () => {\n    const bestMove = findBestMove(game, difficulty);\n    game.move(bestMove);\n    moveSound.play();\n    setFen(game.fen());\n    setGame(new Chess(game.fen()));\n    setMoveHistory(game.history());\n  };\n  const findBestMove = (gameInstance, level) => {\n    const moves = gameInstance.moves();\n    if (level === \"Easy\") {\n      return moves[Math.floor(Math.random() * moves.length)];\n    }\n    let bestEvaluation = -Infinity;\n    let bestMove = moves[Math.floor(Math.random() * moves.length)];\n    for (let move of moves) {\n      const clone = new Chess(gameInstance.fen());\n      clone.move(move);\n      let evaluation = -evaluateBoard(clone);\n      if (level === \"Hard\") {\n        const nextMoves = clone.moves();\n        for (let reply of nextMoves) {\n          const replyClone = new Chess(clone.fen());\n          replyClone.move(reply);\n          evaluation += evaluateBoard(replyClone) * 0.5;\n        }\n      }\n      if (evaluation > bestEvaluation) {\n        bestEvaluation = evaluation;\n        bestMove = move;\n      }\n    }\n    return bestMove;\n  };\n  const evaluateBoard = board => {\n    const pieceValue = {\n      p: 1,\n      n: 3,\n      b: 3,\n      r: 5,\n      q: 9,\n      k: 100\n    };\n    let evaluation = 0;\n    const boardState = board.board();\n    for (let row of boardState) {\n      for (let piece of row) {\n        if (piece) {\n          const value = pieceValue[piece.type] || 0;\n          evaluation += piece.color === \"w\" ? value : -value;\n        }\n      }\n    }\n    return evaluation;\n  };\n  const getAdvice = () => {\n    const moves = game.moves({\n      verbose: true\n    });\n    if (moves.length > 0) {\n      const explainedMoves = moves.map(move => {\n        if (move.flags.includes('c')) return {\n          move: move.san,\n          reason: \"captures an opponent's piece\"\n        };\n        if (move.flags.includes('k')) return {\n          move: move.san,\n          reason: \"puts the king in check\"\n        };\n        if (['d', 'e'].includes(move.to[0])) return {\n          move: move.san,\n          reason: \"controls the center\"\n        };\n        if (move.flags.includes('e')) return {\n          move: move.san,\n          reason: \"special en passant capture\"\n        };\n        return {\n          move: move.san,\n          reason: \"develops a piece toward safety or activity\"\n        };\n      });\n      const bestHint = explainedMoves[0]; // Pick the first best hint\n      setAdvice(`Best Move: ${bestHint.move} â€” ${bestHint.reason}.`);\n    } else {\n      setAdvice(\"No advice available.\");\n    }\n  };\n  const undoMove = () => {\n    game.undo();\n    setFen(game.fen());\n    setGame(new Chess(game.fen()));\n    setMoveHistory(game.history());\n  };\n  const resetGame = () => {\n    const newGame = new Chess();\n    setGame(newGame);\n    setFen(newGame.fen());\n    setAdvice(\"\");\n    setMoveHistory([]);\n    setGameOver(false);\n    setWinner(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      textAlign: \"center\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chess Learning App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(Confetti, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 20\n    }, this), winner && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: winner\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          checked: vsComputer,\n          onChange: () => setVsComputer(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), \"Play vs Computer\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          marginLeft: 15\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          checked: !vsComputer,\n          onChange: () => setVsComputer(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), \"Play Solo (2 players)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Difficulty: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: difficulty,\n        onChange: e => setDifficulty(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Easy\",\n          children: \"Easy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Medium\",\n          children: \"Medium\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Hard\",\n          children: \"Hard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        marginTop: 20\n      },\n      children: /*#__PURE__*/_jsxDEV(Chessboard, {\n        position: fen,\n        onPieceDrop: (source, target) => handleMove(source, target),\n        boardWidth: 600\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 20\n      },\n      children: gameOver ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: getAdvice,\n          children: \"Get Smart Hint\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: undoMove,\n          style: {\n            marginLeft: \"10px\"\n          },\n          children: \"Undo Last Move\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this), advice && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: advice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetGame,\n          children: \"Reset Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 30\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Move History:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: moveHistory.map((move, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: move\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7JR9oOj2TF7QURSiu0J06YYoNgw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Chess","Chessboard","Confetti","Howl","jsxDEV","_jsxDEV","Fragment","_Fragment","moveSound","src","App","_s","game","setGame","fen","setFen","advice","setAdvice","gameOver","setGameOver","vsComputer","setVsComputer","difficulty","setDifficulty","winner","setWinner","moveHistory","setMoveHistory","isGameOver","turn","setTimeout","makeComputerMove","handleMove","sourceSquare","targetSquare","move","from","to","promotion","play","history","bestMove","findBestMove","gameInstance","level","moves","Math","floor","random","length","bestEvaluation","Infinity","clone","evaluation","evaluateBoard","nextMoves","reply","replyClone","board","pieceValue","p","n","b","r","q","k","boardState","row","piece","value","type","color","getAdvice","verbose","explainedMoves","map","flags","includes","san","reason","bestHint","undoMove","undo","resetGame","newGame","className","style","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","checked","onChange","marginLeft","e","target","display","justifyContent","marginTop","position","onPieceDrop","source","boardWidth","onClick","idx","_c","$RefreshReg$"],"sources":["C:/Users/gmlee/Downloads/LearnChessApp/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Chess } from \"chess.js\";\nimport { Chessboard } from \"react-chessboard\";\nimport Confetti from \"react-confetti\";\nimport { Howl } from \"howler\";\nimport \"./App.css\";\n\nconst moveSound = new Howl({\n  src: [\"https://actions.google.com/sounds/v1/cartoon/cartoon_boing.ogg\"]\n});\n\nfunction App() {\n  const [game, setGame] = useState(new Chess());\n  const [fen, setFen] = useState(game.fen());\n  const [advice, setAdvice] = useState(\"\");\n  const [gameOver, setGameOver] = useState(false);\n  const [vsComputer, setVsComputer] = useState(true);\n  const [difficulty, setDifficulty] = useState(\"Medium\"); // New\n  const [winner, setWinner] = useState(\"\");\n  const [moveHistory, setMoveHistory] = useState([]);\n\n  useEffect(() => {\n    if (game.isGameOver()) {\n      setGameOver(true);\n      setWinner(game.turn() === \"w\" ? \"Black wins!\" : \"White wins!\");\n      return;\n    }\n\n    if (vsComputer && game.turn() === \"b\") {\n      setTimeout(() => {\n        makeComputerMove();\n      }, 500);\n    }\n  }, [game, vsComputer]);\n\n  const handleMove = (sourceSquare, targetSquare) => {\n    if (!game || game.isGameOver()) return false;\n    if (vsComputer && game.turn() !== \"w\") return false;\n\n    const move = game.move({\n      from: sourceSquare,\n      to: targetSquare,\n      promotion: \"q\",\n    });\n\n    if (move === null) return false;\n\n    moveSound.play();\n    setFen(game.fen());\n    setGame(new Chess(game.fen()));\n    setMoveHistory(game.history());\n    setAdvice(\"\");\n    return true;\n  };\n\n  const makeComputerMove = () => {\n    const bestMove = findBestMove(game, difficulty);\n    game.move(bestMove);\n    moveSound.play();\n    setFen(game.fen());\n    setGame(new Chess(game.fen()));\n    setMoveHistory(game.history());\n  };\n\n  const findBestMove = (gameInstance, level) => {\n    const moves = gameInstance.moves();\n    if (level === \"Easy\") {\n      return moves[Math.floor(Math.random() * moves.length)];\n    }\n\n    let bestEvaluation = -Infinity;\n    let bestMove = moves[Math.floor(Math.random() * moves.length)];\n    for (let move of moves) {\n      const clone = new Chess(gameInstance.fen());\n      clone.move(move);\n      let evaluation = -evaluateBoard(clone);\n\n      if (level === \"Hard\") {\n        const nextMoves = clone.moves();\n        for (let reply of nextMoves) {\n          const replyClone = new Chess(clone.fen());\n          replyClone.move(reply);\n          evaluation += evaluateBoard(replyClone) * 0.5;\n        }\n      }\n\n      if (evaluation > bestEvaluation) {\n        bestEvaluation = evaluation;\n        bestMove = move;\n      }\n    }\n    return bestMove;\n  };\n\n  const evaluateBoard = (board) => {\n    const pieceValue = { p: 1, n: 3, b: 3, r: 5, q: 9, k: 100 };\n    let evaluation = 0;\n    const boardState = board.board();\n    for (let row of boardState) {\n      for (let piece of row) {\n        if (piece) {\n          const value = pieceValue[piece.type] || 0;\n          evaluation += piece.color === \"w\" ? value : -value;\n        }\n      }\n    }\n    return evaluation;\n  };\n\n  const getAdvice = () => {\n    const moves = game.moves({ verbose: true });\n\n    if (moves.length > 0) {\n      const explainedMoves = moves.map((move) => {\n        if (move.flags.includes('c')) return { move: move.san, reason: \"captures an opponent's piece\" };\n        if (move.flags.includes('k')) return { move: move.san, reason: \"puts the king in check\" };\n        if (['d', 'e'].includes(move.to[0])) return { move: move.san, reason: \"controls the center\" };\n        if (move.flags.includes('e')) return { move: move.san, reason: \"special en passant capture\" };\n        return { move: move.san, reason: \"develops a piece toward safety or activity\" };\n      });\n\n      const bestHint = explainedMoves[0]; // Pick the first best hint\n      setAdvice(`Best Move: ${bestHint.move} â€” ${bestHint.reason}.`);\n    } else {\n      setAdvice(\"No advice available.\");\n    }\n  };\n\n  const undoMove = () => {\n    game.undo();\n    setFen(game.fen());\n    setGame(new Chess(game.fen()));\n    setMoveHistory(game.history());\n  };\n\n  const resetGame = () => {\n    const newGame = new Chess();\n    setGame(newGame);\n    setFen(newGame.fen());\n    setAdvice(\"\");\n    setMoveHistory([]);\n    setGameOver(false);\n    setWinner(\"\");\n  };\n\n  return (\n    <div className=\"App\" style={{ textAlign: \"center\" }}>\n      <h1>Chess Learning App</h1>\n\n      {gameOver && <Confetti />}\n      {winner && <h2>{winner}</h2>}\n\n      <div style={{ marginBottom: 20 }}>\n        <label>\n          <input\n            type=\"radio\"\n            checked={vsComputer}\n            onChange={() => setVsComputer(true)}\n          />\n          Play vs Computer\n        </label>\n        <label style={{ marginLeft: 15 }}>\n          <input\n            type=\"radio\"\n            checked={!vsComputer}\n            onChange={() => setVsComputer(false)}\n          />\n          Play Solo (2 players)\n        </label>\n      </div>\n\n      <div style={{ marginBottom: 20 }}>\n        <label>Difficulty: </label>\n        <select value={difficulty} onChange={(e) => setDifficulty(e.target.value)}>\n          <option value=\"Easy\">Easy</option>\n          <option value=\"Medium\">Medium</option>\n          <option value=\"Hard\">Hard</option>\n        </select>\n      </div>\n\n      {/* Centered Chessboard */}\n      <div style={{ display: \"flex\", justifyContent: \"center\", marginTop: 20 }}>\n        <Chessboard\n          position={fen}\n          onPieceDrop={(source, target) => handleMove(source, target)}\n          boardWidth={600}\n        />\n      </div>\n\n      <div style={{ marginTop: 20 }}>\n        {gameOver ? (\n          <button onClick={resetGame}>New Game</button>\n        ) : (\n          <>\n            <button onClick={getAdvice}>Get Smart Hint</button>\n            <button onClick={undoMove} style={{ marginLeft: \"10px\" }}>Undo Last Move</button>\n            {advice && <p>{advice}</p>}\n            <br />\n            <button onClick={resetGame}>Reset Game</button>\n          </>\n        )}\n      </div>\n\n      {/* Move history */}\n      <div style={{ marginTop: 30 }}>\n        <h3>Move History:</h3>\n        <ol>\n          {moveHistory.map((move, idx) => (\n            <li key={idx}>{move}</li>\n          ))}\n        </ol>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
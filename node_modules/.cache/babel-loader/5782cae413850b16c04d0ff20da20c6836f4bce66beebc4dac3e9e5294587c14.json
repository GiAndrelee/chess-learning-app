{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gmlee\\\\Downloads\\\\LearnChessApp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Chess } from \"chess.js\";\nimport { Chessboard } from \"react-chessboard\";\nimport Confetti from \"react-confetti\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [game, setGame] = useState(new Chess());\n  const [fen, setFen] = useState(game.fen());\n  const [advice, setAdvice] = useState(\"\");\n  const [gameOver, setGameOver] = useState(false);\n  const [vsComputer, setVsComputer] = useState(true);\n  const [winner, setWinner] = useState(\"\");\n  useEffect(() => {\n    if (game.isGameOver()) {\n      setGameOver(true);\n      setWinner(game.turn() === \"w\" ? \"Black wins!\" : \"White wins!\");\n      return;\n    }\n    if (vsComputer && game.turn() === \"b\") {\n      setTimeout(() => {\n        makeComputerMove();\n      }, 500);\n    }\n  }, [game, vsComputer]);\n  const handleMove = (sourceSquare, targetSquare) => {\n    if (!game || game.isGameOver()) return false;\n    if (vsComputer && game.turn() !== \"w\") return false;\n    const move = game.move({\n      from: sourceSquare,\n      to: targetSquare,\n      promotion: \"q\"\n    });\n    if (move === null) return false;\n    setFen(game.fen());\n    setGame(new Chess(game.fen()));\n    setAdvice(\"\");\n    return true;\n  };\n  const makeComputerMove = () => {\n    const bestMove = findBestMove(game, 1);\n    game.move(bestMove);\n    setFen(game.fen());\n    setGame(new Chess(game.fen()));\n  };\n  const findBestMove = (gameInstance, depth) => {\n    const moves = gameInstance.moves();\n    let bestEvaluation = -Infinity;\n    let bestMove = moves[Math.floor(Math.random() * moves.length)];\n    for (let move of moves) {\n      const clone = new Chess(gameInstance.fen());\n      clone.move(move);\n      const evaluation = -evaluateBoard(clone);\n      if (evaluation > bestEvaluation) {\n        bestEvaluation = evaluation;\n        bestMove = move;\n      }\n    }\n    return bestMove;\n  };\n  const evaluateBoard = board => {\n    const pieceValue = {\n      p: 1,\n      n: 3,\n      b: 3,\n      r: 5,\n      q: 9,\n      k: 100\n    };\n    let evaluation = 0;\n    const boardState = board.board();\n    for (let row of boardState) {\n      for (let piece of row) {\n        if (piece) {\n          const value = pieceValue[piece.type] || 0;\n          evaluation += piece.color === \"w\" ? value : -value;\n        }\n      }\n    }\n    return evaluation;\n  };\n  const getAdvice = () => {\n    const possibleMoves = game.moves({\n      verbose: true\n    });\n    if (possibleMoves.length > 0) {\n      const explainedMoves = possibleMoves.map(move => {\n        if (move.flags.includes('c')) return {\n          move: move.san,\n          reason: \"captures an opponent's piece\"\n        };\n        if (move.flags.includes('k')) return {\n          move: move.san,\n          reason: \"puts the king in check\"\n        };\n        if (['d', 'e'].includes(move.to[0])) return {\n          move: move.san,\n          reason: \"controls the center\"\n        };\n        if (move.flags.includes('e')) return {\n          move: move.san,\n          reason: \"special en passant capture\"\n        };\n        return {\n          move: move.san,\n          reason: \"develops a piece toward safety or activity\"\n        };\n      });\n      const randomAdvice = explainedMoves[Math.floor(Math.random() * explainedMoves.length)];\n      setAdvice(`Hint: Play ${randomAdvice.move} because it ${randomAdvice.reason}.`);\n    } else {\n      setAdvice(\"No advice available.\");\n    }\n  };\n  const resetGame = () => {\n    const newGame = new Chess();\n    setGame(newGame);\n    setFen(newGame.fen());\n    setAdvice(\"\");\n    setGameOver(false);\n    setWinner(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chess Learning App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(Confetti, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 20\n    }, this), winner && /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: winner\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 18\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: 20\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          checked: vsComputer,\n          onChange: () => setVsComputer(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), \"Play vs Computer\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          marginLeft: 15\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          checked: !vsComputer,\n          onChange: () => setVsComputer(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), \"Play Solo (2 players)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        marginTop: 20\n      },\n      children: /*#__PURE__*/_jsxDEV(Chessboard, {\n        position: fen,\n        onPieceDrop: (source, target) => handleMove(source, target),\n        boardWidth: 600 // Bigger board\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 20,\n        textAlign: \"center\"\n      },\n      children: gameOver ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"New Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: getAdvice,\n          children: \"Get Smart Hint\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), advice && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: advice\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 24\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetGame,\n          children: \"Reset Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Gr05WVosghxJN4KKJggK/Pt9PJ8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Chess","Chessboard","Confetti","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","game","setGame","fen","setFen","advice","setAdvice","gameOver","setGameOver","vsComputer","setVsComputer","winner","setWinner","isGameOver","turn","setTimeout","makeComputerMove","handleMove","sourceSquare","targetSquare","move","from","to","promotion","bestMove","findBestMove","gameInstance","depth","moves","bestEvaluation","Infinity","Math","floor","random","length","clone","evaluation","evaluateBoard","board","pieceValue","p","n","b","r","q","k","boardState","row","piece","value","type","color","getAdvice","possibleMoves","verbose","explainedMoves","map","flags","includes","san","reason","randomAdvice","resetGame","newGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","marginBottom","checked","onChange","marginLeft","display","justifyContent","marginTop","position","onPieceDrop","source","target","boardWidth","textAlign","onClick","_c","$RefreshReg$"],"sources":["C:/Users/gmlee/Downloads/LearnChessApp/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Chess } from \"chess.js\";\nimport { Chessboard } from \"react-chessboard\";\nimport Confetti from \"react-confetti\";\nimport \"./App.css\";\n\nfunction App() {\n  const [game, setGame] = useState(new Chess());\n  const [fen, setFen] = useState(game.fen());\n  const [advice, setAdvice] = useState(\"\");\n  const [gameOver, setGameOver] = useState(false);\n  const [vsComputer, setVsComputer] = useState(true);\n  const [winner, setWinner] = useState(\"\");\n\n  useEffect(() => {\n    if (game.isGameOver()) {\n      setGameOver(true);\n      setWinner(game.turn() === \"w\" ? \"Black wins!\" : \"White wins!\");\n      return;\n    }\n\n    if (vsComputer && game.turn() === \"b\") {\n      setTimeout(() => {\n        makeComputerMove();\n      }, 500);\n    }\n  }, [game, vsComputer]);\n\n  const handleMove = (sourceSquare, targetSquare) => {\n    if (!game || game.isGameOver()) return false;\n    if (vsComputer && game.turn() !== \"w\") return false;\n\n    const move = game.move({\n      from: sourceSquare,\n      to: targetSquare,\n      promotion: \"q\",\n    });\n\n    if (move === null) return false;\n\n    setFen(game.fen());\n    setGame(new Chess(game.fen()));\n    setAdvice(\"\");\n    return true;\n  };\n\n  const makeComputerMove = () => {\n    const bestMove = findBestMove(game, 1);\n    game.move(bestMove);\n    setFen(game.fen());\n    setGame(new Chess(game.fen()));\n  };\n\n  const findBestMove = (gameInstance, depth) => {\n    const moves = gameInstance.moves();\n    let bestEvaluation = -Infinity;\n    let bestMove = moves[Math.floor(Math.random() * moves.length)];\n\n    for (let move of moves) {\n      const clone = new Chess(gameInstance.fen());\n      clone.move(move);\n      const evaluation = -evaluateBoard(clone);\n      if (evaluation > bestEvaluation) {\n        bestEvaluation = evaluation;\n        bestMove = move;\n      }\n    }\n\n    return bestMove;\n  };\n\n  const evaluateBoard = (board) => {\n    const pieceValue = {\n      p: 1,\n      n: 3,\n      b: 3,\n      r: 5,\n      q: 9,\n      k: 100,\n    };\n    let evaluation = 0;\n    const boardState = board.board();\n    for (let row of boardState) {\n      for (let piece of row) {\n        if (piece) {\n          const value = pieceValue[piece.type] || 0;\n          evaluation += piece.color === \"w\" ? value : -value;\n        }\n      }\n    }\n    return evaluation;\n  };\n\n  const getAdvice = () => {\n    const possibleMoves = game.moves({ verbose: true });\n\n    if (possibleMoves.length > 0) {\n      const explainedMoves = possibleMoves.map((move) => {\n        if (move.flags.includes('c')) return { move: move.san, reason: \"captures an opponent's piece\" };\n        if (move.flags.includes('k')) return { move: move.san, reason: \"puts the king in check\" };\n        if (['d', 'e'].includes(move.to[0])) return { move: move.san, reason: \"controls the center\" };\n        if (move.flags.includes('e')) return { move: move.san, reason: \"special en passant capture\" };\n        return { move: move.san, reason: \"develops a piece toward safety or activity\" };\n      });\n\n      const randomAdvice = explainedMoves[Math.floor(Math.random() * explainedMoves.length)];\n      setAdvice(`Hint: Play ${randomAdvice.move} because it ${randomAdvice.reason}.`);\n    } else {\n      setAdvice(\"No advice available.\");\n    }\n  };\n\n  const resetGame = () => {\n    const newGame = new Chess();\n    setGame(newGame);\n    setFen(newGame.fen());\n    setAdvice(\"\");\n    setGameOver(false);\n    setWinner(\"\");\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Chess Learning App</h1>\n\n      {gameOver && <Confetti />}\n      {winner && <h2>{winner}</h2>}\n\n      {/* Play Mode Toggle */}\n      <div style={{ marginBottom: 20 }}>\n        <label>\n          <input\n            type=\"radio\"\n            checked={vsComputer}\n            onChange={() => setVsComputer(true)}\n          />\n          Play vs Computer\n        </label>\n        <label style={{ marginLeft: 15 }}>\n          <input\n            type=\"radio\"\n            checked={!vsComputer}\n            onChange={() => setVsComputer(false)}\n          />\n          Play Solo (2 players)\n        </label>\n      </div>\n\n      {/* 📏 Centered Big Chessboard */}\n      <div style={{ display: \"flex\", justifyContent: \"center\", marginTop: 20 }}>\n        <Chessboard\n          position={fen}\n          onPieceDrop={(source, target) => handleMove(source, target)}\n          boardWidth={600}  // Bigger board\n        />\n      </div>\n\n      <div style={{ marginTop: 20, textAlign: \"center\" }}>\n        {gameOver ? (\n          <button onClick={resetGame}>New Game</button>\n        ) : (\n          <>\n            <button onClick={getAdvice}>Get Smart Hint</button>\n            {advice && <p>{advice}</p>}\n            <br />\n            <button onClick={resetGame}>Reset Game</button>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gmlee\\\\Downloads\\\\LearnChessApp\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Chess } from \"chess.js\";\nimport { Chessboard } from \"react-chessboard\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [game, setGame] = useState(new Chess());\n  const [fen, setFen] = useState(game.fen());\n  const [advice, setAdvice] = useState(\"\");\n  const [gameOver, setGameOver] = useState(false);\n\n  // ðŸ›  useEffect: whenever the game changes\n  useEffect(() => {\n    if (game.isGameOver()) {\n      setGameOver(true);\n      return;\n    }\n\n    // If it's black's turn, computer should move\n    if (game.turn() === \"b\") {\n      setTimeout(() => {\n        makeComputerMove();\n      }, 500); // small delay to simulate thinking\n    }\n  }, [game]);\n\n  // Handle player's move\n  const handleMove = (sourceSquare, targetSquare) => {\n    if (game.turn() !== \"w\") return false; // Player is White\n\n    const move = game.move({\n      from: sourceSquare,\n      to: targetSquare,\n      promotion: \"q\" // Always promote to queen\n    });\n    if (move === null) return false; // Illegal move\n\n    setFen(game.fen()); // Update board\n    setGame(new Chess(game.fen())); // Update game\n    setAdvice(\"\");\n    return true;\n  };\n\n  // Computer's move (black)\n  const makeComputerMove = () => {\n    const moves = game.moves();\n    if (moves.length === 0) {\n      setGameOver(true);\n      return;\n    }\n    const randomMove = moves[Math.floor(Math.random() * moves.length)];\n    game.move(randomMove);\n    setFen(game.fen());\n    setGame(new Chess(game.fen()));\n  };\n\n  // Get advice\n  const getAdvice = () => {\n    const moves = game.moves();\n    if (moves.length > 0) {\n      const randomMove = moves[Math.floor(Math.random() * moves.length)];\n      setAdvice(`Hint: Try ${randomMove}`);\n    } else {\n      setAdvice(\"No advice. Game might be over!\");\n    }\n  };\n\n  // Reset the game\n  const resetGame = () => {\n    const newGame = new Chess();\n    setGame(newGame);\n    setFen(newGame.fen());\n    setAdvice(\"\");\n    setGameOver(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chess Learning App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Chessboard, {\n      position: fen,\n      onPieceDrop: (source, target) => handleMove(source, target),\n      boardWidth: 400\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 20\n      },\n      children: [gameOver ? /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Game Over!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getAdvice,\n        children: \"Get Hint\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), advice && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: advice\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"Reset Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"QA1iaBHf/Z2kyDOYURjA/1U+K84=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Chess","Chessboard","jsxDEV","_jsxDEV","App","_s","game","setGame","fen","setFen","advice","setAdvice","gameOver","setGameOver","isGameOver","turn","setTimeout","makeComputerMove","handleMove","sourceSquare","targetSquare","move","from","to","promotion","moves","length","randomMove","Math","floor","random","getAdvice","resetGame","newGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","position","onPieceDrop","source","target","boardWidth","style","marginTop","onClick","_c","$RefreshReg$"],"sources":["C:/Users/gmlee/Downloads/LearnChessApp/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Chess } from \"chess.js\";\nimport { Chessboard } from \"react-chessboard\";\nimport \"./App.css\";\n\nfunction App() {\n  const [game, setGame] = useState(new Chess());\n  const [fen, setFen] = useState(game.fen());\n  const [advice, setAdvice] = useState(\"\");\n  const [gameOver, setGameOver] = useState(false);\n\n  // ðŸ›  useEffect: whenever the game changes\n  useEffect(() => {\n    if (game.isGameOver()) {\n      setGameOver(true);\n      return;\n    }\n\n    // If it's black's turn, computer should move\n    if (game.turn() === \"b\") {\n      setTimeout(() => {\n        makeComputerMove();\n      }, 500); // small delay to simulate thinking\n    }\n  }, [game]);\n\n  // Handle player's move\n  const handleMove = (sourceSquare, targetSquare) => {\n    if (game.turn() !== \"w\") return false; // Player is White\n\n    const move = game.move({\n      from: sourceSquare,\n      to: targetSquare,\n      promotion: \"q\", // Always promote to queen\n    });\n\n    if (move === null) return false; // Illegal move\n\n    setFen(game.fen()); // Update board\n    setGame(new Chess(game.fen())); // Update game\n    setAdvice(\"\");\n    return true;\n  };\n\n  // Computer's move (black)\n  const makeComputerMove = () => {\n    const moves = game.moves();\n    if (moves.length === 0) {\n      setGameOver(true);\n      return;\n    }\n    const randomMove = moves[Math.floor(Math.random() * moves.length)];\n    game.move(randomMove);\n    setFen(game.fen());\n    setGame(new Chess(game.fen()));\n  };\n\n  // Get advice\n  const getAdvice = () => {\n    const moves = game.moves();\n    if (moves.length > 0) {\n      const randomMove = moves[Math.floor(Math.random() * moves.length)];\n      setAdvice(`Hint: Try ${randomMove}`);\n    } else {\n      setAdvice(\"No advice. Game might be over!\");\n    }\n  };\n\n  // Reset the game\n  const resetGame = () => {\n    const newGame = new Chess();\n    setGame(newGame);\n    setFen(newGame.fen());\n    setAdvice(\"\");\n    setGameOver(false);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Chess Learning App</h1>\n      <Chessboard\n        position={fen}\n        onPieceDrop={(source, target) => handleMove(source, target)}\n        boardWidth={400}\n      />\n      <div style={{ marginTop: 20 }}>\n        {gameOver ? (\n          <h2>Game Over!</h2>\n        ) : (\n          <button onClick={getAdvice}>Get Hint</button>\n        )}\n        {advice && <p>{advice}</p>}\n        <br />\n        <button onClick={resetGame}>Reset Game</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}